{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","title","year","rating","summary","poster","genres","className","src","alt","slice","map","cur","index","App","props","isChange","getMovies","a","console","log","axios","get","movies","data","setState","isLoading","state","add","count","count2","minus","current","this","medium_cover_image","React","Component","ReactDOM","render","StrictMode","pa","document","getElementById"],"mappings":"uRAqCeA,MAjCf,YAAoE,IAApDC,EAAmD,EAAnDA,GAAIC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAEtD,OACI,sBAAKC,UAAU,QAAf,UACI,qBAAKA,UAAU,gBAAgBC,IAAKH,EAAQI,IAAKR,EAAOA,MAAOA,IAC/D,sBAAKM,UAAU,aAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BN,IAC9B,qBAAIM,UAAU,cAAd,UAA4B,+BAAOL,IAAnC,eAAiE,+BAAOC,OACxE,oBAAGI,UAAU,gBAAb,UAA8BH,EAAQM,MAAM,EAAG,KAA/C,SACA,2CAEI,oBAAIH,UAAU,gBAAd,SACCD,EAAOK,KAAI,SAACC,EAAKC,GAAN,OACR,6BAAiBD,GAARC,WAIjB,4BAdoBb,ICiGrBc,G,wDA/Fb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAHRC,UAAW,EAEQ,EAqBnBC,UArBmB,sBAqBN,8BAAAC,EAAA,6DACXC,QAAQC,IAAI,aADD,SAE8BC,IAAMC,IAAI,yDAFxC,gBAEYC,EAFZ,EAEJC,KAAQA,KAAQD,OACvB,EAAKE,SAAS,CAACC,WAAY,EAAOH,WAClCJ,QAAQC,IAAIG,GAJD,2CArBM,EAoDnBI,MAAQ,CACND,WAAY,EACZH,OAAS,IAtDQ,EAyDnBK,IAAM,WACD,EAAKZ,SAAU,EAAKA,UAAW,EAAY,EAAKA,UAAW,EAC9D,EAAKS,SAAS,CAACI,MAAM,EAAKF,MAAME,MAAM,EAAGC,OAAO,EAAKH,MAAMG,OAAO,KA3DjD,EA8DnBC,MAAQ,WACH,EAAKf,SAAU,EAAKA,UAAW,EAAY,EAAKA,UAAW,EAC9D,EAAKS,UAAS,SAAAO,GAAO,MAAK,CAACH,MAAOG,EAAQH,MAAM,EAAGC,OAAOE,EAAQF,OAAO,OA9DzEX,QAAQC,IAAI,eAFK,E,qDASrB,WACID,QAAQC,IAAI,qBAEZa,KAAKhB,c,gCAgBP,WACEE,QAAQC,IAAI,wB,mCAGd,WAEE,OADAD,QAAQC,IAAI,yBACLa,KAAKjB,W,qCAGd,WAEE,OADAG,QAAQC,IAAI,2BACL,K,kCAGT,WACED,QAAQC,IAAI,0B,oBAwBd,WACED,QAAQC,IAAI,UACZ,MAA4Ba,KAAKN,MAA1BD,EAAP,EAAOA,UAAWH,EAAlB,EAAkBA,OAClB,OACE,yBAAShB,UAAU,YAAnB,SACGmB,EAAa,qBAAKnB,UAAU,SAAf,SAAwB,sBAAMA,UAAU,eAAhB,uBACpC,sBAAKA,UAAU,SAAf,cAA0BgB,EAAOZ,KAAI,SAAAC,GAAG,OACtC,cAAC,EAAD,CACeZ,GAAIY,EAAIZ,GACrBC,MAAOW,EAAIX,MAAOC,KAAMU,EAAIV,KAC5BC,OAAQS,EAAIT,OAAQC,QAASQ,EAAIR,QACjCC,OAAQO,EAAIsB,mBAAoB5B,OAAQM,EAAIN,QAHvCM,EAAIZ,e,uCAtErB,SAAgCe,GAC9BI,QAAQC,IAAI,gC,GAVEe,IAAMC,YCDxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAKC,GAAG,SAEVC,SAASC,eAAe,W","file":"static/js/main.79c16fc8.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({id, title, year, rating, summary, poster, genres}) {\r\n\r\n    return (\r\n        <div className=\"movie\" key={id}>\r\n            <img className=\"movie__poster\" src={poster} alt={title} title={title}/>\r\n            <div className=\"movie_data\">\r\n                <h2 className=\"movie__title\">{title}</h2>\r\n                <h3 className=\"movie__year\"><span>{year}</span>&nbsp;&nbsp;&nbsp;<span>{rating}</span></h3>\r\n                <p className=\"movie_summary\">{summary.slice(0, 180)}...</p>\r\n                <div>\r\n                genres : \r\n                    <ul className=\"movie__genres\"> \r\n                    {genres.map((cur, index) => (\r\n                        <li key={index}>{cur}</li>\r\n                    ))} \r\n                    </ul>       \r\n                </div>\r\n                <br></br>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    id : PropTypes.number.isRequired,\r\n    year : PropTypes.number.isRequired,\r\n    rating : PropTypes.number.isRequired,\r\n    title : PropTypes.string.isRequired,\r\n    summary : PropTypes.string.isRequired,\r\n    poster : PropTypes.string.isRequired,\r\n    genres : PropTypes.arrayOf(PropTypes.string)\r\n};\r\n\r\nexport default Movie;","import React from 'react';\nimport axios from 'axios';\nimport Movie from './Movie';\nimport './App.css';\n\nclass App extends React.Component {\n\n  isChange = true;\n\n  constructor(props) {\n    super(props);\n    console.log('constructor');\n  }\n\n  static getDerviedStateFromProps(props) {\n    console.log('getDerviedStateFromProps');\n  }\n\ncomponentDidMount() {\n    console.log('componentDidMount');\n\n    this.getMovies();\n\n    /*setTimeout(() => {\n      this.setState({isLoading : false, book:true});\n    }, \n    6000);*/\n    \n  }\n\n  getMovies =  async() => {\n    console.log('getMovies');\n    const {data : {data : {movies}}} = await axios.get('https://yts.mx/api/v2/list_movies.json?sort_by=rating');\n    this.setState({isLoading : false, movies});\n    console.log(movies);\n  }\n\n  componentDidUpdate() {\n    console.log('componentDidUpdate');\n  }\n\n  shouldComponentUpdate() {\n    console.log('shouldComponentUpdate');\n    return this.isChange;\n  }\n\n  getSnapshotBeforeUpdate() {\n    console.log('getSnapshotBeforeUpdate');\n    return '';\n  }\n\n  componentWillUnmount() {\n    console.log('componentWillUnmount');\n  }\n/*\nhttps://yts.mx/api/v2/list_movies.json\n*/\n /* state = {\n    count: 0,\n    count2 : 0\n  };*/\n  state = {\n    isLoading : true,\n    movies : []\n  }\n\n  add = () => {\n    if(this.isChange) this.isChange = false; else this.isChange = true;\n    this.setState({count:this.state.count+1, count2:this.state.count2+2});\n  };\n\n  minus = () => {\n    if(this.isChange) this.isChange = false; else this.isChange = true;\n    this.setState(current => ({count: current.count-1, count2:current.count2-2}));\n  };\n\n  render() {\n    console.log('render');\n    const {isLoading, movies} = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? (<div className=\"loader\"><span className=\"loader__text\">loading</span></div>) : \n        ( <div className=\"movies\"> {movies.map(cur => (\n            <Movie \n              key={cur.id} id={cur.id} \n              title={cur.title} year={cur.year} \n              rating={cur.rating} summary={cur.summary} \n              poster={cur.medium_cover_image} genres={cur.genres} />\n          ))}\n          </div>)}\n        {\n       /* (isLoading ? 'loading...' : 'We are ready~~~~~~~~')*/\n        }\n      {/*\n        <div>\n          <h1> MyFarm {this.state.count} {this.state.count2}</h1>\n          <button onClick = {this.add}>더하기</button>\n          <button onClick = {this.minus}>빼기</button>\n        </div>\n    */}\n     </section>);\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App pa='pa'/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}